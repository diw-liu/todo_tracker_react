{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diwen\\\\Downloads\\\\todo_tracker_hw2-main\\\\todo_tracker_hw2-main\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\n  import ItemsListComponent from './components/ItemsListComponent'\n  import ListsComponent from './components/ListsComponent'\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.state.nextListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.addNewItem = () => {\n      let temp = this.state.currentList;\n      let newToDoListItem = [this.makeNewToDoListItem()];\n      temp.items = [...temp.items, ...newToDoListItem];\n      this.setState({\n        currentList: temp,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        id: this.state.nextListItemId,\n        description: \"No Description\",\n        dueDate: \"none\",\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.moveItem = (id, step) => {\n      var items = this.state.currentList.items;\n      var index = -1;\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].id == id) {\n          index = i;\n        }\n      }\n\n      if ((index > 0 && step == 1) | (index < items.length - 1 && step == -1)) {\n        var temp = items[index];\n        items[index] = items[index - step];\n        items[index - step] = temp;\n      }\n\n      this.setState({\n        currentList: {\n          items\n        }\n      });\n    };\n\n    this.deleteItem = id => {\n      var items = this.state.currentList.items;\n      var index = -1;\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].id == id) {\n          index = i;\n        }\n      }\n\n      items.splice(index, 1);\n      this.setState({\n        currentList: {\n          items\n        }\n      });\n    };\n\n    this.closeCurrentList = () => {\n      this.setState({\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    this.itemChange = (id, desc, date, status) => {\n      var items = this.state.currentList.items;\n\n      for (var i = 0; i < items.length; i++) {\n        if (items[i].id == id) {\n          items[i].description = desc;\n          items[i].due_date = date;\n          items[i].status = status;\n        }\n      }\n    };\n\n    this.removeCurrentList = () => {\n      var todoList = this.state.toDoLists;\n      var index = -1;\n\n      for (var i = 0; i < todoList.length; i++) {\n        if (todoList[i] === this.state.currentList) {\n          index = i;\n        }\n      }\n\n      todoList.splice(index, 1);\n      this.setState({\n        toDoLists: todoList,\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  render() {\n    let items = this.state.currentList.items;\n    console.log(this.state.toDoLists);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        moveItemCallBack: this.moveItem,\n        closeCurrentListCallBack: this.closeCurrentList,\n        deleteItemCallBack: this.deleteItem,\n        itemChangeCallBack: this.itemChange,\n        removeCurrentListCallBack: this.removeCurrentList,\n        addNewItemCallBack: this.addNewItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Diwen/Downloads/todo_tracker_hw2-main/todo_tracker_hw2-main/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","name","items","addNewItem","temp","newToDoListItem","makeNewToDoListItem","nextListItemId","description","dueDate","status","toDoListsString","JSON","stringify","localStorage","setItem","moveItem","step","index","i","length","deleteItem","splice","closeCurrentList","itemChange","desc","date","due_date","removeCurrentList","todoList","tps","recentLists","getItem","parse","highListId","highListItemId","j","toDoListItem","useVerboseFeedback","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json'\nimport jsTPS from './common/jsTPS'\n\n// THESE ARE OUR REACT COMPONENTS\nimport Navbar from './components/Navbar'\nimport LeftSidebar from './components/LeftSidebar'\nimport Workspace from './components/Workspace'\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\nimport ItemsListComponent from './components/ItemsListComponent'\nimport ListsComponent from './components/ListsComponent'\n*/}\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props);\n\n    // DISPLAY WHERE WE ARE\n    console.log(\"App constructor\");\n\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\n    this.tps = new jsTPS();\n\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n    recentLists = JSON.parse(recentLists);\n\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n    let highListId = -1;\n    let highListItemId = -1;\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId)\n        highListItemId = toDoListItem.id;\n      }\n    };\n\n    // SETUP OUR APP STATE\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {items: []},\n      nextListId: highListId+1,\n      nextListItemId: highListItemId+1,\n      useVerboseFeedback: true\n    }\n  }\n\n  // WILL LOAD THE SELECTED LIST\n  loadToDoList = (toDoList) => {\n    console.log(\"loading \" + toDoList);\n\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n    const nextLists = this.state.toDoLists.filter(testList =>\n      testList.id !== toDoList.id\n    );\n    nextLists.unshift(toDoList);\n\n    this.setState({\n      toDoLists: nextLists,\n      currentList: toDoList\n    });\n  }\n\n  addNewList = () => {\n    let newToDoListInList = [this.makeNewToDoList()];\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n    let newToDoList = newToDoListInList[0];\n\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\n    this.setState({\n      toDoLists: newToDoListsList,\n      currentList: newToDoList,\n      nextListId: this.state.nextListId+1\n    }, this.afterToDoListsChangeComplete);\n\n  }\n\n  makeNewToDoList = () => {\n    let newToDoList = {\n      id: this.state.nextListId,\n      name: 'Untitled',\n      items: []\n    };\n    return newToDoList;\n  }\n\n  //Constr\n  addNewItem = () =>{\n    let temp=this.state.currentList;\n    let newToDoListItem = [this.makeNewToDoListItem()];\n    temp.items = [...temp.items, ...newToDoListItem];\n\n    this.setState({\n      currentList:temp,\n      nextListItemId:this.state.nextListItemId+1\n    })\n  }\n  makeNewToDoListItem = () =>  {\n    let newToDoListItem = {\n      id: this.state.nextListItemId,\n      description: \"No Description\",\n      dueDate: \"none\",\n      status: \"incomplete\"\n    };\n    return newToDoListItem;\n  }\n\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\n  afterToDoListsChangeComplete = () => {\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\n\n    // WILL THIS WORK? @todo\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\n    localStorage.setItem(\"recent_work\", toDoListsString);\n  }\n\n\n  //Construction site\n  moveItem = (id,step) =>{\n    var items = this.state.currentList.items;\n    var index = -1;\n    for(var i=0;i<items.length;i++){\n      if(items[i].id==id){\n         index=i;\n      }\n    }\n    if((index>0&&step==1)|(index<items.length-1&&step==-1)){\n      var temp=items[index];\n      items[index]=items[index-step];\n      items[index-step]=temp;\n    }\n    this.setState({\n      currentList:{items}\n    })\n  }\n\n  deleteItem = (id) =>{\n    var items = this.state.currentList.items;\n    var index = -1;\n    for(var i=0;i<items.length;i++){\n      if(items[i].id==id){\n        index=i;\n     }\n    }\n    items.splice(index, 1);\n    this.setState({\n      currentList:{items}\n    })\n  }\n\n  closeCurrentList = () =>{\n    this.setState({\n      currentList: {items: []}\n    })\n  }\n  \n  itemChange = (id,desc,date,status) =>{\n    var items = this.state.currentList.items;\n    for(var i=0;i<items.length;i++){\n      if(items[i].id==id){\n          items[i].description =desc;\n          items[i].due_date    =date;\n          items[i].status      =status;\n      }\n    }\n  }\n\n  removeCurrentList = () =>{\n    var todoList=this.state.toDoLists\n    var index = -1;\n    for(var i=0;i<todoList.length;i++){\n      if(todoList[i]===this.state.currentList){\n        index=i;\n      }\n    }\n    todoList.splice(index, 1);\n    this.setState({\n      toDoLists: todoList,\n      currentList: {items: []}\n    })\n  }\n\n  \n  render() {\n    let items = this.state.currentList.items;\n    console.log(this.state.toDoLists);\n    return (\n      <div id=\"root\">\n        <Navbar />\n        <LeftSidebar \n          toDoLists={this.state.toDoLists}\n          loadToDoListCallback={this.loadToDoList}\n          addNewListCallback={this.addNewList}\n        />\n        <Workspace \n          toDoListItems={items} \n          moveItemCallBack={this.moveItem}\n          closeCurrentListCallBack={this.closeCurrentList}\n          deleteItemCallBack={this.deleteItem}\n          itemChangeCallBack={this.itemChange}\n          removeCurrentListCallBack={this.removeCurrentList}\n          addNewItemCallBack={this.addNewItem}\n          \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}