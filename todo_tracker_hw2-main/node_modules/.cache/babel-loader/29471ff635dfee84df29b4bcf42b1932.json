{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diwen\\\\Downloads\\\\todo_tracker_hw2-main\\\\todo_tracker_hw2-main\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS.js';\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction.js';\nimport MoveItem_Transaction from './transactions/MoveItem_Transaction.js';\nimport RemoveItem_Transaction from './transactions/RemoveItem_Transaction.js';\nimport UpdateItem_Transaction from './transactions/UpdateItem_Transaction.js'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\n  import ItemsListComponent from './components/ItemsListComponent'\n  import ListsComponent from './components/ListsComponent'\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.state.nextListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.addNewItemTransaction = () => {\n      let transaction = new AddNewItem_Transaction(this);\n      this.tps.addTransaction(transaction);\n      this.enableButton(\"undo-button\");\n    };\n\n    this.moveItemTransaction = (id, step) => {\n      let transaction = new MoveItem_Transaction(this, id, step);\n      this.tps.addTransaction(transaction);\n      this.enableButton(\"undo-button\");\n    };\n\n    this.removeItemTransaction = item => {\n      let transaction = new RemoveItem_Transaction(this, item);\n      this.tps.addTransaction(transaction);\n      this.enableButton(\"undo-button\");\n    };\n\n    this.updateItemTransaction = (item, desc, dd, status) => {\n      let oldDesc = item.description;\n      let oldDD = item.due_date;\n      let oldStatus = item.status;\n      let transaction = new UpdateItem_Transaction(this, item, oldDesc, desc, oldDD, dd, oldStatus, status);\n      this.tps.addTransaction(transaction);\n      this.enableButton(\"undo-button\");\n    };\n\n    this.addNewItem = () => {\n      let temp = this.state.currentList;\n      let newToDoListItem = [this.makeNewToDoListItem()];\n      temp.items = [...temp.items, ...newToDoListItem];\n      this.setState({\n        currentList: temp,\n        nextListItemId: this.state.nextListItemId + 1\n      });\n      return newToDoListItem[0];\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        id: this.state.nextListItemId,\n        description: \"No Description\",\n        due_date: new Date().toUTCString(),\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.moveItem = (item, step) => {\n      var items = this.state.currentList.items;\n      var index = this.iterateCurrentArray(item, items);\n\n      if ((index > 0 && step == 1) | (index < items.length - 1 && step == -1)) {\n        var temp = items[index];\n        items[index] = items[index - step];\n        items[index - step] = temp;\n      }\n\n      this.setState({\n        currentList: {\n          items\n        }\n      });\n    };\n\n    this.deleteItem = item => {\n      var items = this.state.currentList.items;\n      var index = this.iterateCurrentArray(item, items);\n      items.splice(index, 1);\n      this.setState({\n        currentList: {\n          items\n        }\n      });\n      return index;\n    };\n\n    this.itemChange = (item, desc, date, status) => {\n      var items = this.state.currentList.items;\n      var index = this.iterateCurrentArray(item, items);\n      items[index].description = desc;\n      items[index].due_date = date;\n      items[index].status = status;\n      this.setState({\n        currentList: {\n          items\n        }\n      });\n    };\n\n    this.addItemAtIndex = (item, index) => {\n      var temp = this.state.currentList;\n      temp.items.splice(index, 0, item);\n      this.setState({\n        currentList: temp\n      });\n    };\n\n    this.closeCurrentList = () => {\n      this.setState({\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    this.removeCurrentList = () => {\n      var todoList = this.state.toDoLists;\n      var index = this.iterateCurrentArray(this.state.currentList, todoList);\n      todoList.splice(index, 1);\n      this.setState({\n        toDoLists: todoList,\n        currentList: {\n          items: []\n        }\n      });\n    };\n\n    this.handleKey = event => {\n      if (event.ctrlKey && event.key === 'z') {\n        this.undo();\n      }\n\n      if (event.ctrlKey && event.key === \"y\") {\n        this.redo();\n      }\n    };\n\n    this.changeListName = (list, name) => {\n      var todoList = this.state.toDoLists;\n      var index = this.iterateCurrentArray(list, todoList);\n      todoList[index].name = name;\n      this.setState({\n        toDoLists: todoList\n      });\n    };\n\n    this.setAddButtonState = bool => {\n      if (!bool) {\n        this.disableButton(\"add-list-button\");\n        document.getElementById(\"list-item-control\");\n      } else {\n        this.enableButton(\"add-list-button\");\n      }\n\n      var temp = document.getElementsByClassName(\"list-item-control\");\n\n      for (var i = 2; i < 5; i++) {\n        if (bool) {\n          temp[i].classList.add(\"disabled\");\n        } else {\n          temp[i].classList.remove(\"disabled\");\n        }\n      }\n\n      for (var i = 0; i < 2; i++) {\n        if (bool) {\n          temp[i].classList.add(\"disabled\");\n        }\n      }\n\n      this.setState({\n        addButton: bool,\n        threeButton: !bool\n      });\n    };\n\n    this.undo = () => {\n      if (this.tps.hasTransactionToUndo()) {\n        this.tps.undoTransaction();\n\n        if (!this.tps.hasTransactionToUndo()) {\n          this.disableButton(\"undo-button\");\n        }\n\n        this.enableButton(\"redo-button\");\n      }\n    };\n\n    this.redo = () => {\n      if (this.tps.hasTransactionToRedo()) {\n        this.tps.doTransaction();\n\n        if (!this.tps.hasTransactionToRedo()) {\n          this.disableButton(\"redo-button\");\n        }\n\n        this.enableButton(\"undo-button\");\n      }\n    };\n\n    this.emptyTransaction = () => {\n      this.tps.clearAllTransactions();\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      addButton: true,\n      threeButton: false\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  iterateCurrentArray(item, items) {\n    var index = -1;\n\n    for (var i = 0; i < items.length; i++) {\n      if (items[i] == item) {\n        index = i;\n      }\n    }\n\n    return index;\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKey, false);\n  }\n\n  disableButton(id) {\n    let undoButton = document.getElementById(id);\n    undoButton.classList.add(\"disabled\");\n  }\n\n  enableButton(id) {\n    let redoButton = document.getElementById(id);\n    redoButton.classList.remove(\"disabled\");\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    console.log(this.state.toDoLists);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        addButton: this.state.addButton,\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList,\n        changeListNameCallback: this.changeListName,\n        setAddButtonStateCallback: this.setAddButtonState,\n        emptyTransactionCallback: this.emptyTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        threeButton: this.state.threeButton,\n        toDoListItems: items,\n        moveItemCallBack: this.moveItemTransaction,\n        closeCurrentListCallBack: this.closeCurrentList,\n        deleteItemCallBack: this.removeItemTransaction,\n        itemChangeCallBack: this.updateItemTransaction,\n        removeCurrentListCallBack: this.removeCurrentList,\n        addNewItemCallBack: this.addNewItemTransaction,\n        undoCallBack: this.undo,\n        redoCallBack: this.redo,\n        setAddButtonStateCallback: this.setAddButtonState,\n        emptyTransactionCallback: this.emptyTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Diwen/Downloads/todo_tracker_hw2-main/todo_tracker_hw2-main/src/App.js"],"names":["React","Component","testData","jsTPS","AddNewItem_Transaction","MoveItem_Transaction","RemoveItem_Transaction","UpdateItem_Transaction","Navbar","LeftSidebar","Workspace","App","constructor","props","loadToDoList","toDoList","console","log","nextLists","state","toDoLists","filter","testList","id","unshift","setState","currentList","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","name","items","addNewItemTransaction","transaction","tps","addTransaction","enableButton","moveItemTransaction","step","removeItemTransaction","item","updateItemTransaction","desc","dd","status","oldDesc","description","oldDD","due_date","oldStatus","addNewItem","temp","newToDoListItem","makeNewToDoListItem","nextListItemId","Date","toUTCString","toDoListsString","JSON","stringify","localStorage","setItem","moveItem","index","iterateCurrentArray","length","deleteItem","splice","itemChange","date","addItemAtIndex","closeCurrentList","removeCurrentList","todoList","handleKey","event","ctrlKey","key","undo","redo","changeListName","list","setAddButtonState","bool","disableButton","document","getElementById","getElementsByClassName","i","classList","add","remove","addButton","threeButton","hasTransactionToUndo","undoTransaction","hasTransactionToRedo","doTransaction","emptyTransaction","clearAllTransactions","recentLists","getItem","parse","highListId","highListItemId","j","toDoListItem","componentDidMount","addEventListener","undoButton","redoButton","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json'\nimport jsTPS from './common/jsTPS.js'\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction.js'\nimport MoveItem_Transaction from './transactions/MoveItem_Transaction.js'\nimport RemoveItem_Transaction from './transactions/RemoveItem_Transaction.js'\nimport UpdateItem_Transaction from './transactions/UpdateItem_Transaction.js'\n\n// THESE ARE OUR REACT COMPONENTS\nimport Navbar from './components/Navbar'\nimport LeftSidebar from './components/LeftSidebar'\nimport Workspace from './components/Workspace'\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\nimport ItemsListComponent from './components/ItemsListComponent'\nimport ListsComponent from './components/ListsComponent'\n*/}\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props);\n\n    // DISPLAY WHERE WE ARE\n    console.log(\"App constructor\");\n\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\n    this.tps = new jsTPS();\n\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n    recentLists = JSON.parse(recentLists);\n\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n    let highListId = -1;\n    let highListItemId = -1;\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId)\n        highListItemId = toDoListItem.id;\n      }\n    };\n\n    // SETUP OUR APP STATE\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {items: []},\n      nextListId: highListId+1,\n      nextListItemId: highListItemId+1,\n      addButton: true,\n      threeButton: false\n    }\n  }\n\n  // WILL LOAD THE SELECTED LIST\n  loadToDoList = (toDoList) => {\n    console.log(\"loading \" + toDoList);\n\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n    const nextLists = this.state.toDoLists.filter(testList =>\n      testList.id !== toDoList.id\n    );\n    nextLists.unshift(toDoList);\n\n    this.setState({\n      toDoLists: nextLists,\n      currentList: toDoList\n    });\n  }\n\n  addNewList = () => {\n    let newToDoListInList = [this.makeNewToDoList()];\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n    let newToDoList = newToDoListInList[0];\n\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\n    this.setState({\n      toDoLists: newToDoListsList,\n      currentList: newToDoList,\n      nextListId: this.state.nextListId+1\n    }, this.afterToDoListsChangeComplete);\n\n  }\n\n  makeNewToDoList = () => {\n    let newToDoList = {\n      id: this.state.nextListId,\n      name: 'Untitled',\n      items: []\n    };\n    return newToDoList;\n  }\n  //Transaction\n  addNewItemTransaction = () =>{\n    let transaction = new AddNewItem_Transaction(this);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  moveItemTransaction = (id,step) =>{\n    let transaction = new MoveItem_Transaction(this,id,step);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  removeItemTransaction = (item) =>{\n    let transaction = new RemoveItem_Transaction(this,item);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  updateItemTransaction = (item,desc,dd,status) =>{\n    let oldDesc=item.description;\n    let oldDD=item.due_date;\n    let oldStatus=item.status;\n    let transaction = new UpdateItem_Transaction(this,item,oldDesc,desc,oldDD,dd,oldStatus,status);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n\n  //Constr\n  addNewItem = () =>{\n    let temp=this.state.currentList;\n    let newToDoListItem = [this.makeNewToDoListItem()];\n    temp.items = [...temp.items, ...newToDoListItem];\n\n    this.setState({\n      currentList:temp,\n      nextListItemId:this.state.nextListItemId+1\n    })\n    return newToDoListItem[0];\n  }\n\n  makeNewToDoListItem = () =>  {\n    let newToDoListItem = {\n      id: this.state.nextListItemId,\n      description: \"No Description\",\n      due_date\n      :  new Date().toUTCString(),\n      status: \"incomplete\"\n    };\n    return newToDoListItem;\n  }\n\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\n  afterToDoListsChangeComplete = () => {\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\n\n    // WILL THIS WORK? @todo\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\n    localStorage.setItem(\"recent_work\", toDoListsString);\n  }\n\n\n  //Construction site\n  moveItem = (item,step) =>{\n    var items = this.state.currentList.items;\n    var index=  this.iterateCurrentArray(item,items);\n    if((index>0&&step==1)|(index<items.length-1&&step==-1)){\n      var temp=items[index];\n      items[index]=items[index-step];\n      items[index-step]=temp;\n    }\n    this.setState({\n      currentList:{items}\n    })\n  }\n\n  deleteItem = (item) =>{\n    var items = this.state.currentList.items;\n    var index=this.iterateCurrentArray(item,items);\n    items.splice(index, 1);\n    this.setState({\n      currentList:{items}\n    })\n    return index;\n  }\n\n  itemChange = (item,desc,date,status) =>{\n    var items = this.state.currentList.items;\n    var index=this.iterateCurrentArray(item,items); \n    items[index].description =desc;\n    items[index].due_date    =date;\n    items[index].status      =status;\n    this.setState({\n      currentList:{items}\n    })\n  }\n  \n  addItemAtIndex = (item,index) =>{\n    var temp=this.state.currentList;\n    temp.items.splice(index, 0, item);\n    this.setState({\n      currentList:temp\n    })\n  }\n\n  closeCurrentList = () =>{\n    this.setState({\n      currentList: {items: []}\n    })\n  }\n\n  removeCurrentList = () =>{\n    var todoList=this.state.toDoLists\n    var index=this.iterateCurrentArray(this.state.currentList,todoList); \n    todoList.splice(index, 1);\n    this.setState({\n      toDoLists: todoList,\n      currentList: {items: []}\n    })\n  }\n\n  iterateCurrentArray(item,items){\n    var index = -1;\n    for(var i=0;i<items.length;i++){\n      if(items[i]==item){\n        index=i;\n     }\n    }\n    return index;\n  }\n  \n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKey, false);\n  }\n\n  handleKey = (event) =>{\n    if(event.ctrlKey && event.key==='z'){\n      this.undo();\n    }\n    if(event.ctrlKey && event.key===\"y\"){\n      this.redo();\n    }\n  }\n\n  changeListName = (list,name)=>{\n    var todoList=this.state.toDoLists\n    var index=this.iterateCurrentArray(list,todoList);\n    todoList[index].name=name;\n    this.setState({\n      toDoLists:todoList\n    }) \n  }\n\n  setAddButtonState = (bool) =>{\n    if(!bool){\n      this.disableButton(\"add-list-button\")\n      document.getElementById(\"list-item-control\")\n    }else{\n      this.enableButton(\"add-list-button\")\n    }\n\n    var temp=document.getElementsByClassName(\"list-item-control\")\n    for(var i=2;i<5;i++){\n      if(bool){\n        temp[i].classList.add(\"disabled\");\n      }else{\n        temp[i].classList.remove(\"disabled\");\n      }\n    }\n\n    for(var i=0;i<2;i++){\n      if(bool){\n        temp[i].classList.add(\"disabled\");\n      }\n    }\n    this.setState({\n      addButton:bool,\n      threeButton:!bool\n    })\n  }\n\n  // SIMPLE UNDO/REDO FUNCTIONS\n  undo = () => {\n    if (this.tps.hasTransactionToUndo()) {\n        this.tps.undoTransaction();\n        if (!this.tps.hasTransactionToUndo()) {\n          this.disableButton(\"undo-button\");\n        }\n        this.enableButton(\"redo-button\");\n    }\n  } \n\n  redo = () => {\n    if (this.tps.hasTransactionToRedo()) {\n        this.tps.doTransaction();\n        if (!this.tps.hasTransactionToRedo()) {\n            this.disableButton(\"redo-button\");\n        }\n        this.enableButton(\"undo-button\");\n    }\n  }\n\n  disableButton(id) {\n    let undoButton = document.getElementById(id);\n    undoButton.classList.add(\"disabled\");\n  }\n\n  enableButton(id) {\n    let redoButton = document.getElementById(id);\n    redoButton.classList.remove(\"disabled\");\n  }\n  \n  emptyTransaction = () =>{\n    this.tps.clearAllTransactions();\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    console.log(this.state.toDoLists);\n    return (\n      <div id=\"root\">\n        <Navbar />\n        <LeftSidebar \n          addButton={this.state.addButton}\n          toDoLists={this.state.toDoLists}\n          loadToDoListCallback={this.loadToDoList}\n          addNewListCallback={this.addNewList}\n          changeListNameCallback={this.changeListName}\n          setAddButtonStateCallback={this.setAddButtonState}\n          emptyTransactionCallback={this.emptyTransaction}\n        />\n        <Workspace \n          threeButton={this.state.threeButton}\n          toDoListItems={items} \n          moveItemCallBack={this.moveItemTransaction}\n          closeCurrentListCallBack={this.closeCurrentList}\n          deleteItemCallBack={this.removeItemTransaction}\n          itemChangeCallBack={this.updateItemTransaction}\n          removeCurrentListCallBack={this.removeCurrentList}\n          addNewItemCallBack={this.addNewItemTransaction}\n          undoCallBack={this.undo}\n          redoCallBack={this.redo}\n          setAddButtonStateCallback={this.setAddButtonState} \n          emptyTransactionCallback={this.emptyTransaction} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}