[{"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\index.js":"1","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\App.js":"2","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\reportWebVitals.js":"3","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\common\\jsTPS.js":"4","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\LeftSidebar.js":"5","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Navbar.js":"6","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Workspace.js":"7","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ToDoItem.js":"8","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ListLink.js":"9"},{"size":539,"mtime":1615084630068,"results":"10","hashOfConfig":"11"},{"size":5915,"mtime":1615401445223,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1615084630089,"results":"13","hashOfConfig":"11"},{"size":6496,"mtime":1615084630136,"results":"14","hashOfConfig":"11"},{"size":1488,"mtime":1615397918115,"results":"15","hashOfConfig":"11"},{"size":412,"mtime":1615084630196,"results":"16","hashOfConfig":"11"},{"size":3720,"mtime":1615401124514,"results":"17","hashOfConfig":"11"},{"size":4631,"mtime":1615321065559,"results":"18","hashOfConfig":"11"},{"size":916,"mtime":1615398782652,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1x7xxgx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\index.js",[],["43","44"],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\App.js",["45","46","47","48","49","50"],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\reportWebVitals.js",[],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\common\\jsTPS.js",["51","52"],"'use strict'\n\n/**\n * jsTPS_Transaction\n * \n * This provides the basic structure for a transaction class. Note to use\n * jsTPS one should create objects that define these two methods, doTransaction\n * and undoTransaction, which will update the application state accordingly.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 1.0\n */\nexport class jsTPS_Transaction {\n    /**\n     * This method is called by jTPS when a transaction is executed.\n     */\n    doTransaction() {\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\n    }\n    \n    /**\n     * This method is called by jTPS when a transaction is undone.\n     */\n    undoTransaction() {\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\n    }\n}\n\n/**\n * jsTPS\n * \n * This class serves as the Transaction Processing System. Note that it manages\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\n * state changes for the given application. Note that this TPS is not platform\n * specific as it is programmed in raw JavaScript.\n */\nexport default class jsTPS {\n    constructor() {\n        // THE TRANSACTION STACK\n        this.transactions = [];\n\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\n        this.numTransactions = 0;\n\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\n        // AND STILL COULD BE REDONE.\n        this.mostRecentTransaction = -1;\n\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\n        // MANAGE CONCURRENT UPDATES\n        this.performingDo = false;\n        this.performingUndo = false;\n    }\n\n    /**\n     * isPerformingDo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of a do/redo operation.\n     */\n    isPerformingDo() {\n        return this.performingDo;\n    }\n\n    /**\n     * isPerformingUndo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of an undo operation.\n     */\n    isPerformingUndo() {\n        return this.performingUndo;\n    }\n\n    /**\n     * getSize\n     * \n     * Accessor method for getting the number of transactions on the stack.\n     */\n    getSize() {\n        return this.transactions.length;\n    }\n\n    /**\n     * getRedoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possibly be redone.\n     */\n    getRedoSize() {\n        return this.getSize() - this.mostRecentTransaction - 1;\n    }\n\n    /**\n     * getUndoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possible be undone.\n     */\n    getUndoSize() {\n        return this.mostRecentTransaction + 1;\n    }\n\n    /**\n     * hasTransactionToRedo\n     * \n     * Method for getting a boolean representing whether or not\n     * there are transactions on the stack that can be redone.\n     */\n    hasTransactionToRedo() {\n        return (this.mostRecentTransaction+1) < this.numTransactions;\n    }\n\n    /**\n     * hasTransactionToUndo\n     * \n     * Method for getting a boolean representing whehter or not\n     * there are transactions on the stack that can be undone.\n     */\n    hasTransactionToUndo() {\n        return this.mostRecentTransaction >= 0;\n    }\n\n    /**\n     * addTransaction\n     * \n     * Method for adding a transaction to the TPS stack, note it\n     * also then does the transaction.\n     * \n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\n     */\n    addTransaction(transaction) {\n        // ARE WE BRANCHING?\n        if ((this.mostRecentTransaction < 0) \n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\n                    this.transactions.splice(i, 1);\n                }\n                this.numTransactions = this.mostRecentTransaction + 2;\n        }\n        else {\n            this.numTransactions++;\n        }\n\n        // ADD THE TRANSACTION\n        this.transactions[this.mostRecentTransaction+1] = transaction;\n\n        // AND EXECUTE IT\n        this.doTransaction();\n    }\n\n    /**\n     * doTransaction\n     * \n     * Does the current transaction on the stack and advances the transaction\n     * counter. Note this function may be invoked as a result of either adding\n     * a transaction (which also does it), or redoing a transaction.\n     */\n    doTransaction() {\n        if (this.hasTransactionToRedo()) {\n            this.performingDo = true;\n            let transaction = this.transactions[this.mostRecentTransaction+1];\n            transaction.doTransaction();\n            this.mostRecentTransaction++;\n            this.performingDo = false;\n        }\n    }\n\n    /**\n     * This function gets the most recently executed transaction on the \n     * TPS stack and undoes it, moving the TPS counter accordingly.\n     */\n    undoTransaction() {\n        if (this.hasTransactionToUndo()) {\n            this.performingUndo = true;\n            let transaction = this.transactions[this.mostRecentTransaction];\n            transaction.undoTransaction();\n            this.mostRecentTransaction--;\n            this.performingUndo = false;\n        }\n    }\n\n    /**\n     * clearAllTransactions\n     * \n     * Removes all the transactions from the TPS, leaving it with none.\n     */\n    clearAllTransactions() {\n        // REMOVE ALL THE TRANSACTIONS\n        this.transactions = new Array();\n        \n        // MAKE SURE TO RESET THE LOCATION OF THE\n        // TOP OF THE TPS STACK TOO\n        this.mostRecentTransaction = -1;      \n        this.numTransactions = 0; \n    }\n\n    /**\n     * toString\n     * \n     * Builds and returns a textual represention of the full TPS and its stack.\n     */\n    toString() {        \n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\n        text += \"--Current Transaction Stack:\\n\";\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\n            let jT = this.transactions[i];\n            text += \"----\" + jT.toString() + \"\\n\";\n        }\n        return text;        \n    }\n}","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\LeftSidebar.js",["53"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport ListLink from './ListLink'\nimport AddBox from '@material-ui/icons/AddBox';\n\nclass LeftSidebar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleAddNewList = () => {\n        this.props.addNewListCallback();\n    }\n\n    render() {\n        return (\n            <div id=\"left-sidebar\">\n                <div id=\"left-sidebar-header\" class=\"section-header\">\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\n                        <AddBox \n                            id=\"add-list-button\"\n                            className=\"material-icons todo_button\"\n                            onClick={this.handleAddNewList} />\n                    </span>\n                </div>\n                <div id=\"todo-lists-list\">\n                {\n                    this.props.toDoLists.map((toDoList) => (\n                        <ListLink\n                            key={toDoList.id}\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\n                            loadToDoListCallback={this.props.loadToDoListCallback} />  // PASS THE CALLBACK TO THE CHILDREN\n                    ))\n                }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftSidebar;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Navbar.js",["54"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"navbar\">\n                <div id=\"title-div\">\n                    Todo Tracker\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Workspace.js",[],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ToDoItem.js",["55","56"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport Close from '@material-ui/icons/Close';\n\nclass ToDoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            taskChange:false,\n            dueDateChange:false,\n            statusChange:false,\n        }\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\n    }\n\n    componentDidMount = () => {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" did mount\");\n    }\n    handleItemUp = () => {\n        this.props.moveItemCallBack(this.props.toDoListItem.id,1);\n    }\n    handleItemDown = () => {\n        this.props.moveItemCallBack(this.props.toDoListItem.id,-1);\n    }\n    handleDeleteItem = () =>{\n        this.props.deleteItemCallBack(this.props.toDoListItem.id);\n    }\n\n    //for task change\n    handleTaskInput = () =>{\n        console.log(\"handletaskinput call\")\n        this.setState({\n            taskChange:true\n        })\n    }\n    handleTaskChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var task=e.target.value;\n        this.props.itemChangeCallBack(listItem.id, task, listItem.due_date, listItem.status);\n        this.setState({\n            taskChange:false\n        })\n    }\n    \n    //for date change\n    handleDateInput = () =>{\n        console.log(\"dueDateChange call\")\n        this.setState({\n            dueDateChange:true\n        })\n    }\n    handleDateChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var date=e.target.value;\n        this.props.itemChangeCallBack(listItem.id, listItem.description, date, listItem.status);\n        this.setState({\n            dueDateChange:false\n        })\n    }\n\n    //for status change\n    handleStatusInput = () =>{\n        console.log(\"statusChange call\")\n        this.setState({\n            statusChange:true\n        })\n    }\n    handleStatusChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var status=e.target.value;\n        this.props.itemChangeCallBack(listItem.id, listItem.description, listItem.due_date, status);\n        this.setState({\n            statusChange:false\n        })\n    }\n\n    render() {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem render\");\n        let listItem = this.props.toDoListItem;\n        let statusType = \"status-complete\";\n        if (listItem.status === \"incomplete\")\n            statusType = \"status-incomplete\";\n\n        return (\n            <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\n                {this.state.taskChange ? \n                    <input className='item-col task-col' type=\"text\" defaultValue={listItem.description} onBlur={this.handleTaskChange}></input> \n                  : <div className='item-col task-col' onClick={this.handleTaskInput}>{listItem.description}</div>\n                  }\n                {this.state.dueDateChange ? \n                    <input className='item-col due-date-col' type=\"date\" defaultValue={listItem.due_date} onBlur={this.handleDateChange}></input> \n                  : <div className='item-col due-date-col' onClick={this.handleDateInput}>{listItem.due_date}</div>\n                  }\n                {this.state.statusChange ? \n                    <select className='item-col status-col' className={statusType} defaultValue={listItem.status} onBlur={this.handleStatusChange}>\n                        <option value=\"complete\">complete</option>\n                        <option value=\"incomplete\">incomplete</option>\n                    </select> \n                  : <div className='item-col status-col' className={statusType} onClick={this.handleStatusInput}>{listItem.status}</div>\n                }\n                <div className='item-col test-4-col'></div>\n                <div className='item-col list-controls-col'>\n                    <KeyboardArrowUp className='list-item-control todo-button' onClick={this.handleItemUp}/>\n                    <KeyboardArrowDown className='list-item-control todo-button' onClick={this.handleItemDown}/>\n                    <Close className='list-item-control todo-button' onClick={this.handleDeleteItem}/>\n                    <div className='list-item-control'></div>\n                <div className='list-item-control'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ToDoItem;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ListLink.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":10,"column":1,"nodeType":"63","messageId":"64","endLine":13,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":136,"column":21,"nodeType":"67","messageId":"68","endLine":136,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":140,"column":22,"nodeType":"67","messageId":"68","endLine":140,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":140,"column":54,"nodeType":"67","messageId":"68","endLine":140,"endColumn":56},{"ruleId":"65","severity":1,"message":"66","line":154,"column":21,"nodeType":"67","messageId":"68","endLine":154,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":173,"column":21,"nodeType":"67","messageId":"68","endLine":173,"endColumn":23},{"ruleId":"69","severity":1,"message":"70","line":1,"column":1,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13,"fix":"73"},{"ruleId":"74","severity":1,"message":"75","line":194,"column":29,"nodeType":"76","messageId":"77","endLine":194,"endColumn":40},{"ruleId":"78","severity":1,"message":"79","line":7,"column":5,"nodeType":"80","messageId":"81","endLine":9,"endColumn":6},{"ruleId":"78","severity":1,"message":"79","line":5,"column":5,"nodeType":"80","messageId":"81","endLine":7,"endColumn":6},{"ruleId":"82","severity":1,"message":"83","line":100,"column":61,"nodeType":"84","endLine":100,"endColumn":83},{"ruleId":"82","severity":1,"message":"83","line":104,"column":58,"nodeType":"84","endLine":104,"endColumn":80},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"87","text":"88"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",[0,12],""]