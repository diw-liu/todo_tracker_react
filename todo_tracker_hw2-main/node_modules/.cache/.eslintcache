[{"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\index.js":"1","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\App.js":"2","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\reportWebVitals.js":"3","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\common\\jsTPS.js":"4","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\LeftSidebar.js":"5","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Navbar.js":"6","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Workspace.js":"7","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ToDoItem.js":"8","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ListLink.js":"9","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\MoveItem_Transaction.js":"10","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\AddNewItem_Transaction.js":"11","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\RemoveItem_Transaction.js":"12","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\UpdateItem_Transaction.js":"13"},{"size":569,"mtime":1616166388421,"results":"14","hashOfConfig":"15"},{"size":10112,"mtime":1616165720525,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1615084630089,"results":"17","hashOfConfig":"15"},{"size":6529,"mtime":1615511454903,"results":"18","hashOfConfig":"15"},{"size":1970,"mtime":1616003908440,"results":"19","hashOfConfig":"15"},{"size":412,"mtime":1615084630196,"results":"20","hashOfConfig":"15"},{"size":4625,"mtime":1616175018638,"results":"21","hashOfConfig":"15"},{"size":4955,"mtime":1616003536085,"results":"22","hashOfConfig":"15"},{"size":1826,"mtime":1616003263671,"results":"23","hashOfConfig":"15"},{"size":604,"mtime":1615481952096,"results":"24","hashOfConfig":"15"},{"size":558,"mtime":1615511531757,"results":"25","hashOfConfig":"15"},{"size":569,"mtime":1615485983087,"results":"26","hashOfConfig":"15"},{"size":955,"mtime":1615487749065,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1x7xxgx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"30"},"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\index.js",[],["64","65"],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\App.js",["66","67","68","69","70"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json'\nimport jsTPS from './common/jsTPS.js'\nimport AddNewItem_Transaction from './transactions/AddNewItem_Transaction.js'\nimport MoveItem_Transaction from './transactions/MoveItem_Transaction.js'\nimport RemoveItem_Transaction from './transactions/RemoveItem_Transaction.js'\nimport UpdateItem_Transaction from './transactions/UpdateItem_Transaction.js'\n\n// THESE ARE OUR REACT COMPONENTS\nimport Navbar from './components/Navbar'\nimport LeftSidebar from './components/LeftSidebar'\nimport Workspace from './components/Workspace'\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\nimport ItemsListComponent from './components/ItemsListComponent'\nimport ListsComponent from './components/ListsComponent'\n*/}\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props);\n\n    // DISPLAY WHERE WE ARE\n    console.log(\"App constructor\");\n\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\n    this.tps = new jsTPS();\n\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n    recentLists = JSON.parse(recentLists);\n\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n    let highListId = -1;\n    let highListItemId = -1;\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId)\n        highListItemId = toDoListItem.id;\n      }\n    };\n\n    // SETUP OUR APP STATE\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {items: []},\n      nextListId: highListId+1,\n      nextListItemId: highListItemId+1,\n      addButton: true,\n      threeButton: false\n    }\n  }\n\n  // WILL LOAD THE SELECTED LIST\n  loadToDoList = (toDoList) => {\n    console.log(\"loading \" + toDoList);\n\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n    const nextLists = this.state.toDoLists.filter(testList =>\n      testList.id !== toDoList.id\n    );\n    nextLists.unshift(toDoList);\n\n    this.setState({\n      toDoLists: nextLists,\n      currentList: toDoList\n    });\n  }\n\n  addNewList = () => {\n    let newToDoListInList = [this.makeNewToDoList()];\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n    let newToDoList = newToDoListInList[0];\n\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\n    this.setState({\n      toDoLists: newToDoListsList,\n      currentList: newToDoList,\n      nextListId: this.state.nextListId+1\n    }, this.afterToDoListsChangeComplete);\n\n  }\n\n  makeNewToDoList = () => {\n    let newToDoList = {\n      id: this.state.nextListId,\n      name: 'Untitled',\n      items: []\n    };\n    return newToDoList;\n  }\n  //Transaction\n  addNewItemTransaction = () =>{\n    let transaction = new AddNewItem_Transaction(this);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  moveItemTransaction = (id,step) =>{\n    let transaction = new MoveItem_Transaction(this,id,step);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  removeItemTransaction = (item) =>{\n    let transaction = new RemoveItem_Transaction(this,item);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n  updateItemTransaction = (item,desc,dd,status) =>{\n    let oldDesc=item.description;\n    let oldDD=item.due_date;\n    let oldStatus=item.status;\n    let transaction = new UpdateItem_Transaction(this,item,oldDesc,desc,oldDD,dd,oldStatus,status);\n    this.tps.addTransaction(transaction);\n    this.enableButton(\"undo-button\");\n  }\n\n  //Constr\n  addNewItem = () =>{\n    let temp=this.state.currentList;\n    let newToDoListItem = [this.makeNewToDoListItem()];\n    temp.items = [...temp.items, ...newToDoListItem];\n\n    this.setState({\n      currentList:temp,\n      nextListItemId:this.state.nextListItemId+1\n    }, this.afterToDoListsChangeComplete);\n    return newToDoListItem[0];\n  }\n\n  makeNewToDoListItem = () =>  {\n    let newToDoListItem = {\n      id: this.state.nextListItemId,\n      description: \"No Description\",\n      due_date\n      :  new Date().toUTCString(),\n      status: \"incomplete\"\n    };\n    return newToDoListItem;\n  }\n\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\n  afterToDoListsChangeComplete = () => {\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\n\n    // WILL THIS WORK? @todo\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\n    localStorage.setItem(\"recentLists\", toDoListsString);\n  }\n\n\n  //Construction site\n  moveItem = (item,step) =>{\n    var items = this.state.currentList.items;\n    var index=  this.iterateCurrentArray(item,items);\n    if((index>0&&step==1)|(index<items.length-1&&step==-1)){\n      var temp=items[index];\n      items[index]=items[index-step];\n      items[index-step]=temp;\n    }\n    this.setState({\n      currentList:{items}\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  deleteItem = (item) =>{\n    var items = this.state.currentList.items;\n    var index=this.iterateCurrentArray(item,items);\n    items.splice(index, 1);\n    this.setState({\n      currentList:{items}\n    }, this.afterToDoListsChangeComplete);\n    return index;\n  }\n\n  itemChange = (item,desc,date,status) =>{\n    var items = this.state.currentList.items;\n    var index=this.iterateCurrentArray(item,items); \n    items[index].description =desc;\n    items[index].due_date    =date;\n    items[index].status      =status;\n    this.setState({\n      currentList:{items}\n    }, this.afterToDoListsChangeComplete);\n  }\n  \n  addItemAtIndex = (item,index) =>{\n    var temp=this.state.currentList;\n    temp.items.splice(index, 0, item);\n    this.setState({\n      currentList:temp\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  closeCurrentList = () =>{\n    this.setState({\n      currentList: {items: []}\n    })\n  }\n\n  removeCurrentList = () =>{\n    var todoList=this.state.toDoLists\n    var index=this.iterateCurrentArray(this.state.currentList,todoList); \n    todoList.splice(index, 1);\n    this.setState({\n      toDoLists: todoList,\n      currentList: {items: []}\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  iterateCurrentArray(item,items){\n    var index = -1;\n    for(var i=0;i<items.length;i++){\n      if(items[i]==item){\n        index=i;\n     }\n    }\n    return index;\n  }\n  \n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKey, false);\n  }\n\n  handleKey = (event) =>{\n    if(event.ctrlKey && event.key==='z'){\n      this.undo();\n    }\n    if(event.ctrlKey && event.key===\"y\"){\n      this.redo();\n    }\n  }\n\n  changeListName = (list,name)=>{\n    var todoList=this.state.toDoLists\n    var index=this.iterateCurrentArray(list,todoList);\n    todoList[index].name=name;\n    this.setState({\n      toDoLists:todoList\n    }, this.afterToDoListsChangeComplete);\n  }\n\n  setAddButtonState = (bool) =>{\n    if(!bool){\n      this.disableButton(\"add-list-button\")\n      document.getElementById(\"add-list-button\").style.color=\"black\"\n    }else{\n      this.enableButton(\"add-list-button\")\n      document.getElementById(\"add-list-button\").style.color=\"#ffc819\"\n    }\n\n    var temp=document.getElementsByClassName(\"list-item-control\")\n    for(var i=2;i<5;i++){\n      if(bool){\n        temp[i].classList.add(\"disabled\");\n      }else{\n        temp[i].classList.remove(\"disabled\");\n      }\n    }\n\n    for(var i=0;i<2;i++){\n      if(bool){\n        temp[i].classList.add(\"disabled\");\n      }\n    }\n    this.setState({\n      addButton:bool,\n      threeButton:!bool\n    })\n  }\n\n  // SIMPLE UNDO/REDO FUNCTIONS\n  undo = () => {\n    if (this.tps.hasTransactionToUndo()) {\n        this.tps.undoTransaction();\n        if (!this.tps.hasTransactionToUndo()) {\n          this.disableButton(\"undo-button\");\n        }\n        this.enableButton(\"redo-button\");\n    }\n  } \n\n  redo = () => {\n    if (this.tps.hasTransactionToRedo()) {\n        this.tps.doTransaction();\n        if (!this.tps.hasTransactionToRedo()) {\n            this.disableButton(\"redo-button\");\n        }\n        this.enableButton(\"undo-button\");\n    }\n  }\n\n  disableButton(id) {\n    let undoButton = document.getElementById(id);\n    undoButton.classList.add(\"disabled\");\n  }\n\n  enableButton(id) {\n    let redoButton = document.getElementById(id);\n    redoButton.classList.remove(\"disabled\");\n  }\n  \n  emptyTransaction = () =>{\n    this.tps.clearAllTransactions();\n  }\n\n  render() {\n    let items = this.state.currentList.items;\n    console.log(this.state.toDoLists);\n    return (\n      <div id=\"root\">\n        <Navbar />\n        <LeftSidebar \n          addButton={this.state.addButton}\n          toDoLists={this.state.toDoLists}\n          loadToDoListCallback={this.loadToDoList}\n          addNewListCallback={this.addNewList}\n          changeListNameCallback={this.changeListName}\n          setAddButtonStateCallback={this.setAddButtonState}\n          emptyTransactionCallback={this.emptyTransaction}\n        />\n        <Workspace \n          threeButton={this.state.threeButton}\n          toDoListItems={items} \n          moveItemCallBack={this.moveItemTransaction}\n          closeCurrentListCallBack={this.closeCurrentList}\n          deleteItemCallBack={this.removeItemTransaction}\n          itemChangeCallBack={this.updateItemTransaction}\n          removeCurrentListCallBack={this.removeCurrentList}\n          addNewItemCallBack={this.addNewItemTransaction}\n          undoCallBack={this.undo}\n          redoCallBack={this.redo}\n          setAddButtonStateCallback={this.setAddButtonState} \n          emptyTransactionCallback={this.emptyTransaction} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\reportWebVitals.js",[],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\common\\jsTPS.js",["71","72"],"'use strict'\n\n/**\n * jsTPS_Transaction\n * \n * This provides the basic structure for a transaction class. Note to use\n * jsTPS one should create objects that define these two methods, doTransaction\n * and undoTransaction, which will update the application state accordingly.\n * \n * @author THE McKilla Gorilla (accept no imposters)\n * @version 1.0\n */\nexport class jsTPS_Transaction {\n    /**\n     * This method is called by jTPS when a transaction is executed.\n     */\n    doTransaction() {\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\n    }\n    \n    /**\n     * This method is called by jTPS when a transaction is undone.\n     */\n    undoTransaction() {\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\n    }\n}\n\n/**\n * jsTPS\n * \n * This class serves as the Transaction Processing System. Note that it manages\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\n * state changes for the given application. Note that this TPS is not platform\n * specific as it is programmed in raw JavaScript.\n */\nexport default class jsTPS {\n    constructor() {\n        // THE TRANSACTION STACK\n        this.transactions = [];\n\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\n        this.numTransactions = 0;\n\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\n        // AND STILL COULD BE REDONE.\n        this.mostRecentTransaction = -1;\n\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\n        // MANAGE CONCURRENT UPDATES\n        this.performingDo = false;\n        this.performingUndo = false;\n    }\n\n    /**\n     * isPerformingDo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of a do/redo operation.\n     */\n    isPerformingDo() {\n        return this.performingDo;\n    }\n\n    /**\n     * isPerformingUndo\n     * \n     * Accessor method for getting a boolean representing whether or not\n     * a transaction is currently in the midst of an undo operation.\n     */\n    isPerformingUndo() {\n        return this.performingUndo;\n    }\n\n    /**\n     * getSize\n     * \n     * Accessor method for getting the number of transactions on the stack.\n     */\n    getSize() {\n        return this.transactions.length;\n    }\n\n    /**\n     * getRedoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possibly be redone.\n     */\n    getRedoSize() {\n        return this.getSize() - this.mostRecentTransaction - 1;\n    }\n\n    /**\n     * getUndoSize\n     * \n     * Method for getting the total number of transactions on the stack\n     * that can possible be undone.\n     */\n    getUndoSize() {\n        return this.mostRecentTransaction + 1;\n    }\n\n    /**\n     * hasTransactionToRedo\n     * \n     * Method for getting a boolean representing whether or not\n     * there are transactions on the stack that can be redone.\n     */\n    hasTransactionToRedo() {\n        return (this.mostRecentTransaction+1) < this.numTransactions;\n    }\n\n    /**\n     * hasTransactionToUndo\n     * \n     * Method for getting a boolean representing whehter or not\n     * there are transactions on the stack that can be undone.\n     */\n    hasTransactionToUndo() {\n        return this.mostRecentTransaction >= 0;\n    }\n\n    /**\n     * addTransaction\n     * \n     * Method for adding a transaction to the TPS stack, note it\n     * also then does the transaction.\n     * \n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\n     */\n    addTransaction(transaction) {\n        // ARE WE BRANCHING?\n        if ((this.mostRecentTransaction < 0) \n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\n                    this.transactions.splice(i, 1);\n                }\n                this.numTransactions = this.mostRecentTransaction + 2;\n        }\n        else {\n            this.numTransactions++;\n        }\n\n        // ADD THE TRANSACTION\n        this.transactions[this.mostRecentTransaction+1] = transaction;\n        console.log(transaction);\n        // AND EXECUTE IT\n        this.doTransaction();\n    }\n\n    /**\n     * doTransaction\n     * \n     * Does the current transaction on the stack and advances the transaction\n     * counter. Note this function may be invoked as a result of either adding\n     * a transaction (which also does it), or redoing a transaction.\n     */\n    doTransaction() {\n        if (this.hasTransactionToRedo()) {\n            this.performingDo = true;\n            let transaction = this.transactions[this.mostRecentTransaction+1];\n            transaction.doTransaction();\n            this.mostRecentTransaction++;\n            this.performingDo = false;\n        }\n    }\n\n    /**\n     * This function gets the most recently executed transaction on the \n     * TPS stack and undoes it, moving the TPS counter accordingly.\n     */\n    undoTransaction() {\n        if (this.hasTransactionToUndo()) {\n            this.performingUndo = true;\n            let transaction = this.transactions[this.mostRecentTransaction];\n            transaction.undoTransaction();\n            this.mostRecentTransaction--;\n            this.performingUndo = false;\n        }\n    }\n\n    /**\n     * clearAllTransactions\n     * \n     * Removes all the transactions from the TPS, leaving it with none.\n     */\n    clearAllTransactions() {\n        // REMOVE ALL THE TRANSACTIONS\n        this.transactions = new Array();\n        \n        // MAKE SURE TO RESET THE LOCATION OF THE\n        // TOP OF THE TPS STACK TOO\n        this.mostRecentTransaction = -1;      \n        this.numTransactions = 0; \n    }\n\n    /**\n     * toString\n     * \n     * Builds and returns a textual represention of the full TPS and its stack.\n     */\n    toString() {        \n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\n        text += \"--Current Transaction Stack:\\n\";\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\n            let jT = this.transactions[i];\n            text += \"----\" + jT.toString() + \"\\n\";\n        }\n        return text;        \n    }\n}","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\LeftSidebar.js",["73","74"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport ListLink from './ListLink'\nimport AddBox from '@material-ui/icons/AddBox';\n\nclass LeftSidebar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleAddNewList = () => {\n        this.props.addNewListCallback();\n    }\n    render() {\n        let addButton=\"disabled\"\n        if (this.props.addButton){\n            addButton=\"\"\n        }\n        return (\n            <div id=\"left-sidebar\">\n                <div id=\"left-sidebar-header\" class=\"section-header\">\n                    <span class=\"left-sidebar-header-text\">Todolists</span>\n                    <span class=\"left-sidebar-controls\" id=\"add-undo-redo-box\">\n                        <AddBox \n                            id=\"add-list-button\"\n                            className={\"material-icons todo_button \"+addButton}\n                            onClick={this.handleAddNewList} />\n                    </span>\n                </div>\n                <div id=\"todo-lists-list\">\n                {\n                    this.props.toDoLists.map((toDoList,index) => (\n                        <ListLink\n                            top={index==0&&!this.props.addButton}\n                            key={toDoList.id}\n                            toDoList={toDoList}                                // PASS THE LIST TO THE CHILDREN\n                            loadToDoListCallback={this.props.loadToDoListCallback}  // PASS THE CALLBACK TO THE CHILDREN\n                            changeListNameCallback={this.props.changeListNameCallback}\n                            setAddButtonStateCallback={this.props.setAddButtonStateCallback}\n                            emptyTransactionCallback={this.props.emptyTransactionCallback}\n                        />\n                    ))\n                }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LeftSidebar;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Navbar.js",["75"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"navbar\">\n                <div id=\"title-div\">\n                    Todo Tracker\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\Workspace.js",["76","77"],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ToDoItem.js",["78","79"],"// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react'\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\nimport Close from '@material-ui/icons/Close';\n\nclass ToDoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            taskChange:false,\n            dueDateChange:false,\n            statusChange:false,\n        }\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" constructor\");\n    }\n\n    componentDidMount = () => {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem \" + this.props.toDoListItem.id + \" did mount\");\n    }\n    handleItemUp = () => {\n        this.props.moveItemCallBack(this.props.toDoListItem,1);\n    }\n    handleItemDown = (e) => {\n        this.props.moveItemCallBack(this.props.toDoListItem,-1);\n    }\n    handleDeleteItem = () =>{\n        this.props.deleteItemCallBack(this.props.toDoListItem);\n    }\n\n    //for task change\n    handleTaskInput = () =>{\n        console.log(\"handletaskinput call\")\n        this.setState({\n            taskChange:true\n        })\n    }\n    handleTaskChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var task=e.target.value;\n        this.props.itemChangeCallBack(listItem, task, listItem.due_date, listItem.status);\n        this.setState({\n            taskChange:false\n        })\n    }\n    \n    //for date change\n    handleDateInput = () =>{\n        console.log(\"dueDateChange call\")\n        this.setState({\n            dueDateChange:true\n        })\n    }\n    handleDateChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var date=e.target.value;\n        this.props.itemChangeCallBack(listItem, listItem.description, date, listItem.status);\n        this.setState({\n            dueDateChange:false\n        })\n    }\n\n    //for status change\n    handleStatusInput = () =>{\n        console.log(\"statusChange call\")\n        this.setState({\n            statusChange:true\n        })\n    }\n    handleStatusChange = (e) =>{\n        let listItem = this.props.toDoListItem;\n        var status=e.target.value;\n        this.props.itemChangeCallBack(listItem, listItem.description, listItem.due_date, status);\n        this.setState({\n            statusChange:false\n        })\n    }\n\n    render() {\n        // DISPLAY WHERE WE ARE\n        console.log(\"\\t\\t\\tToDoItem render\");\n        let listItem = this.props.toDoListItem;\n        let statusType = \"status-complete\";\n        if (listItem.status === \"incomplete\")\n            statusType = \"status-incomplete\";\n        let moveup=\"\"\n        if (this.props.topDisable){\n            moveup=\"disabled\"\n        }\n        let movedown=\"\"\n        if (this.props.bottomDisable){\n            movedown=\"disabled\"\n        }\n        return (\n            <div id={'todo-list-item-' + listItem.id} className='list-item-card'>\n                {this.state.taskChange ? \n                    <input className='item-col task-col spacer-small' type=\"text\" defaultValue={listItem.description} onBlur={this.handleTaskChange}></input> \n                  : <div className='item-col task-col spacer-small' onClick={this.handleTaskInput}>{listItem.description}</div>\n                  }\n                {this.state.dueDateChange ? \n                    <input className='item-col due-date-col spacer-small' type=\"date\" defaultValue={listItem.due_date} onBlur={this.handleDateChange}></input> \n                  : <div className='item-col due-date-col spacer-small' onClick={this.handleDateInput}>{listItem.due_date}</div>\n                  }\n                {this.state.statusChange ? \n                    <select className='item-col status-col spacer-small' className={statusType} defaultValue={listItem.status} onBlur={this.handleStatusChange}>\n                        <option value=\"complete\">complete</option>\n                        <option value=\"incomplete\">incomplete</option>\n                    </select> \n                  : <div className='item-col status-col spacer-small' className={statusType} onClick={this.handleStatusInput}>{listItem.status}</div>\n                }\n                <div className='item-col test-4-col spacer-small'></div>\n                <div className='item-col list-controls-col spacer-small'>\n                    <KeyboardArrowUp className={'list-item-control todo-button '+moveup} onClick={this.handleItemUp}/>\n                    <KeyboardArrowDown className={'list-item-control todo-button '+movedown} onClick={this.handleItemDown}/>\n                    <Close className='list-item-control todo-button' onClick={this.handleDeleteItem}/>\n                    <div className='list-item-control'></div>\n                <div className='list-item-control spacer-small'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ToDoItem;","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\components\\ListLink.js",[],"C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\MoveItem_Transaction.js",["80"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"../common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR MOVING AN ITEM\r\nexport default class MoveItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initModel, id, step) {\r\n        super();\r\n        this.model = initModel;\r\n        this.id = id;\r\n        this.step = step;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.model.moveItem(this.id, this.step);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.model.moveItem(this.id, -1*(this.step));\r\n    }\r\n}","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\AddNewItem_Transaction.js",["81"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"../common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR ADDING A NEW ITEM TO A TODO LIST\r\nexport default class AddNewItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initModel) {\r\n        super();\r\n        this.model = initModel;\r\n    }\r\n\r\n    doTransaction() {\r\n        // MAKE A NEW ITEM\r\n        this.itemAdded = this.model.addNewItem();\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.model.deleteItem(this.itemAdded);\r\n    }\r\n}","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\RemoveItem_Transaction.js",["82"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"../common/jsTPS.js\"\r\n\r\n// THIS TRANSACTION IS FOR REMOVING AN ITEM\r\nexport default class RemoveItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initModel, initItem) {\r\n        super();\r\n        this.model = initModel;\r\n        this.item = initItem;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.index=this.model.deleteItem(this.item);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.model.addItemAtIndex(this.item, this.index);\r\n    }\r\n}","C:\\Users\\Diwen\\Downloads\\todo_tracker_hw2-main\\todo_tracker_hw2-main\\src\\transactions\\UpdateItem_Transaction.js",["83"],"'use strict'\r\n\r\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport { jsTPS_Transaction } from \"../common/jsTPS.js\"\r\n\r\nexport default class UpdateItem_Transaction extends jsTPS_Transaction {\r\n    constructor(initModel, initItem, initOldDesc, initNewDesc, initOldDate, initNewDate, initOldStatus, initNewStatus) {\r\n        super();\r\n        this.model = initModel;\r\n        this.item = initItem;\r\n        this.oldDesc = initOldDesc;\r\n        this.newDesc = initNewDesc;\r\n        this.oldDate = initOldDate;\r\n        this.newDate = initNewDate;\r\n        this.oldStatus = initOldStatus;\r\n        this.newStatus = initNewStatus;\r\n    }\r\n\r\n    doTransaction() {\r\n        console.log(\"uddc\")\r\n        this.model.itemChange(this.item, this.newDesc, this.newDate, this.newStatus);\r\n    }\r\n\r\n    undoTransaction() {\r\n        console.log(\"uduc\")\r\n        this.model.itemChange(this.item, this.oldDesc, this.oldDate, this.oldStatus);\r\n    }\r\n}",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":1,"nodeType":"90","messageId":"91","endLine":17,"endColumn":4},{"ruleId":"92","severity":1,"message":"93","line":165,"column":22,"nodeType":"94","messageId":"95","endLine":165,"endColumn":24},{"ruleId":"92","severity":1,"message":"93","line":165,"column":54,"nodeType":"94","messageId":"95","endLine":165,"endColumn":56},{"ruleId":"92","severity":1,"message":"93","line":223,"column":18,"nodeType":"94","messageId":"95","endLine":223,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":270,"column":13,"nodeType":"98","messageId":"99","endLine":270,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13,"fix":"104"},{"ruleId":"105","severity":1,"message":"106","line":194,"column":29,"nodeType":"107","messageId":"108","endLine":194,"endColumn":40},{"ruleId":"109","severity":1,"message":"110","line":7,"column":5,"nodeType":"111","messageId":"112","endLine":9,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":34,"column":39,"nodeType":"94","messageId":"95","endLine":34,"endColumn":41},{"ruleId":"109","severity":1,"message":"110","line":5,"column":5,"nodeType":"111","messageId":"112","endLine":7,"endColumn":6},{"ruleId":"92","severity":1,"message":"93","line":77,"column":46,"nodeType":"94","messageId":"95","endLine":77,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":78,"column":49,"nodeType":"94","messageId":"95","endLine":78,"endColumn":51},{"ruleId":"113","severity":1,"message":"114","line":107,"column":74,"nodeType":"115","endLine":107,"endColumn":96},{"ruleId":"113","severity":1,"message":"114","line":111,"column":71,"nodeType":"115","endLine":111,"endColumn":93},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13,"fix":"116"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13,"fix":"117"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13,"fix":"118"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","messageId":"103","endLine":1,"endColumn":13,"fix":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'i' is already defined.","Identifier","redeclared","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"122","text":"123"},"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"range":"124","text":"123"},{"range":"125","text":"123"},{"range":"126","text":"123"},{"range":"127","text":"123"},"no-global-assign","no-unsafe-negation",[0,12],"",[0,12],[0,12],[0,12],[0,12]]